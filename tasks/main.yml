---

- name: "Validate vars"
  assert:
    that:
      - newrelic_java_agent_app_name != ''            
      - newrelic_license_key != ''
  tags: ['check_vars']

- name: "Add {{ newrelic_java_agent_group }} group"
  group:
    name: "{{ newrelic_java_agent_group }}"
    system: yes
  when: newrelic_java_agent_manage_user

- name: "Add {{ newrelic_java_agent_user }} user"
  user:
    name: "{{ newrelic_java_agent_user }}"
    group: "{{ newrelic_java_agent_group }}"
    shell: /sbin/nologin
    system: yes
  when: newrelic_java_agent_manage_user

- name: Make sure the newrelic dir is writeable
  file:
    path: "{{ newrelic_java_agent_dir }}"
    state: directory
    owner: "{{ newrelic_java_agent_user }}"
    group: "{{ newrelic_java_agent_user }}"
    mode: "0775"
  tags:
    - newrelic

- name: Get Newrelic java agent
  get_url:
    url: "{{ newrelic_java_agent_download_url }}"
    dest: "{{ newrelic_java_agent_dir }}/{{ newrelic_java_agent_file }}"
    mode: "0766"
  register: new_newrelic_download
  tags:
    - newrelic

- name: Get list of files in the directory
  shell: "ls -1 {{ newrelic_java_agent_dir }}/newrelic*.jar"
  register: files
  when: new_newrelic_download.changed

- name: Remove the old newrelic files when a new file has been downloaded and extracted
  file:
    path: "{{ newrelic_java_agent_parent_dir }}/{{ item }}"
    state: absent
  with_items: "{{ files.stdout_lines | default() }}"
  when: new_newrelic_download.changed and item != newrelic_java_agent_file

- name: Set up the Newrelic config file
  template:
    src: newrelic.yml.j2
    dest: "{{ newrelic_java_agent_dir }}/newrelic.yml"
    owner: "{{ newrelic_java_agent_user }}"
    group: "{{ newrelic_java_agent_user }}"
    mode: "0775"
  notify: restart app
  tags:
    - newrelic

- name: Create logs directory
  file:
    name: "{{ newrelic_java_agent_dir }}/logs"
    state: directory
    owner: "{{ newrelic_java_agent_user }}"
    group: "{{ newrelic_java_agent_user }}"

- name: Set Directory Permissions
  file:
    name: "{{ newrelic_java_agent_dir }}"
    state: directory
    owner: "{{ newrelic_java_agent_user }}"
    group: "{{ newrelic_java_agent_user }}"
    recurse: yes
  notify: restart app
